{"version":3,"sources":["components/router/Home.js","components/router/Product.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Component","Product","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","this","message","map","item","id","title","price","App","className","exact","activeClassName","to","path","component","Instruction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAEMA,E,4JACF,WACI,OAAO,6C,GAFIC,aAMJD,IC2EEE,G,wDA5ET,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,qDAUnB,WAAqB,IAAD,OAChBC,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,MAAOK,OAIX,SAACP,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,oBAOV,WACE,MAAmCS,KAAKV,MAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MACzB,OAAIF,EACK,0CAAaA,EAAMU,WAChBT,EAIT,mCACA,gCACE,0CAEA,kCACM,+BACE,oCACA,uCACA,uCACA,2CAEFC,EAAMS,KAAI,SAAAC,GAAI,OACX,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,QACV,6BAAKF,EAAKG,QACV,sDAnBP,iD,GArCKnB,c,iBC0BToB,MAvBf,WACE,OACE,sBAAKC,UAAU,MAAf,UAEJ,cAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,GAAG,IAA3C,kBAFI,IAGE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,SAASC,GAAG,WAA3C,qBAHF,IAIE,cAAC,IAAD,CAASF,OAAK,EAACC,gBAAgB,SAASC,GAAG,eAA3C,yBAEA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,IAAIC,UAAW,SAAAxB,GAAK,OAAI,cAAC,EAAD,eAAUA,OACpD,cAAC,IAAD,CAAOoB,OAAK,EAACG,KAAK,WAAWC,UAAWzB,IACxC,cAAC,IAAD,CAAOqB,OAAK,EAACG,KAAK,eAAeC,UAAWC,aCTrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcf95c16.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return <h1>Welcome</h1>;\r\n      }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport {Component} from 'react';\r\n\r\nimport  './ProductCss.css';\r\n\r\n  \r\n  class Product extends Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n          };\r\n          \r\n        }\r\n      \r\n        componentDidMount() {\r\n            fetch('https://fakestoreapi.com/products')\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: result\r\n                });\r\n              },\r\n            \r\n              (error) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  error\r\n                });\r\n                \r\n              }\r\n            )\r\n        }\r\n      \r\n        render() {\r\n          const { error, isLoaded, items } = this.state;\r\n          if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n          } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n          } else {\r\n            return (\r\n             <>\r\n             <div>\r\n               <h2>Products</h2> \r\n               \r\n               <table>\r\n                     <tr>\r\n                       <th>ID</th>\r\n                       <th>Title</th>\r\n                       <th>Price</th>\r\n                       <th>Select</th>\r\n                       </tr>\r\n                    {items.map(item => (\r\n                        <tr>\r\n                          <td>{item.id}</td>\r\n                          <td>{item.title}</td>\r\n                          <td>{item.price}</td>\r\n                          <td>Select\r\n    \r\n            </td>\r\n                        </tr>\r\n\r\n                    ))} \r\n\r\n                 </table>\r\n             </div>\r\n            \r\n             {/* <ProdDetails/> */}\r\n\r\n             </> \r\n        );\r\n       \r\n          }\r\n      \r\n        }\r\n      }\r\n    \r\n  \r\n  export default Product;","\nimport './App.css';\nimport {Route,Switch,NavLink} from 'react-router-dom';\nimport Home from './components/router/Home';\nimport Product from './components/router/Product';\nimport Instruction from './components/router/Instruction'\n// import MyComponent from './demo/MyComponent'\n\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n\n<NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>|\n      <NavLink exact activeClassName=\"active\" to=\"/product\">Product</NavLink>|\n      <NavLink exact activeClassName=\"active\" to=\"/instruction\">Instruction</NavLink>\n\n      <Switch>\n        {/* <Route exact path=\"/\" component={Home}/> */}\n        <Route exact path=\"/\" component={props => <Home {...props} />} />\n        <Route exact path=\"/product\" component={Product}/>\n        <Route exact path=\"/instruction\" component={Instruction}/>\n    \n        {/* <Route  component={PageNotFound}/> */}\n      </Switch> \n      {/* <MyComponent/> */}\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}